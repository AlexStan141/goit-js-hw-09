{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAE/B,OADsBC,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAE9DG,QAAQG,OAAO,sBAAqCD,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,CAcrE,SAASO,EAAsBC,EAAeC,EAAMT,EAAOU,GACrDA,EAAS,EACXC,QAAQC,IAAI,kBACO,GAAVF,EACTC,QAAQC,IAAI,2BACc,GAAjBJ,EACTK,YAAW,WACTF,QAAQC,IACNd,EAAcU,EAAeR,GAASQ,EAAgB,GAAKC,IAE7DF,EAAsBC,EAAgB,EAAGC,EAAMT,EAAOU,E,GACrDV,GACMQ,EAAgBE,EAAS,GAClCG,YAAW,WACTF,QAAQC,IACNd,EAAcU,EAAeR,GAASQ,EAAgB,GAAKC,IAE7DF,EAAsBC,EAAgB,EAAGC,EAAMT,EAAOU,E,GACrDD,E,CA5BIK,SAASC,uBAAuB,QAAQ,GAE9CC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAIlB,EAAQc,SAASK,cAAc,uBAAuBC,MACtDX,EAAOK,SAASK,cAAc,sBAAsBC,MACpDV,EAASI,SAASK,cAAc,wBAAwBC,MAC5Db,EAAsB,EAAGc,SAASZ,GAAOY,SAASrB,GAAQqB,SAASX,G","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    return Promise.reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nvar form = document.getElementsByClassName('form')[0];\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  var delay = document.querySelector(\"input[name='delay']\").value;\n  var step = document.querySelector(\"input[name='step']\").value;\n  var amount = document.querySelector(\"input[name='amount']\").value;\n  displayCurrentPromise(1, parseInt(step), parseInt(delay), parseInt(amount));\n});\n\nfunction displayCurrentPromise(currentAmount, step, delay, amount) {\n  if (amount < 0) {\n    console.log('Invalid amount');\n  } else if (amount == 0) {\n    console.log('No promises to display.');\n  } else if (currentAmount == 1) {\n    setTimeout(() => {\n      console.log(\n        createPromise(currentAmount, delay + (currentAmount - 1) * step)\n      );\n      displayCurrentPromise(currentAmount + 1, step, delay, amount);\n    }, delay);\n  } else if (currentAmount < amount + 1) {\n    setTimeout(() => {\n      console.log(\n        createPromise(currentAmount, delay + (currentAmount - 1) * step)\n      );\n      displayCurrentPromise(currentAmount + 1, step, delay, amount);\n    }, step);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Promise","resolve","concat","reject","$ce04d3a99e08e73b$var$displayCurrentPromise","currentAmount","step","amount","console","log","setTimeout","document","getElementsByClassName","addEventListener","event","preventDefault","querySelector","value","parseInt"],"version":3,"file":"03-promises.8f70b1d7.js.map"}